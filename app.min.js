/*!
 * Chirpy Theme PWA Application
 * Progressive Web App functionality
 */

// Service Worker registration
if ('serviceWorker' in navigator) {
    window.addEventListener('load', function() {
        const baseurl = new URLSearchParams(window.location.search).get('baseurl') || '';
        const register = new URLSearchParams(window.location.search).get('register') === 'true';
        
        if (register) {
            navigator.serviceWorker.register(baseurl + '/sw.js')
                .then(function(registration) {
                    console.log('ServiceWorker registration successful');
                })
                .catch(function(error) {
                    console.log('ServiceWorker registration failed: ', error);
                });
        }
    });
}

// PWA install prompt
let deferredPrompt;

window.addEventListener('beforeinstallprompt', function(e) {
    // Prevent Chrome 67 and earlier from automatically showing the prompt
    e.preventDefault();
    // Stash the event so it can be triggered later
    deferredPrompt = e;
    
    // Show install button
    const installButton = document.querySelector('#install-app');
    if (installButton) {
        installButton.style.display = 'block';
        
        installButton.addEventListener('click', function() {
            // Hide the install button
            installButton.style.display = 'none';
            // Show the prompt
            deferredPrompt.prompt();
            // Wait for the user to respond to the prompt
            deferredPrompt.userChoice.then(function(choiceResult) {
                if (choiceResult.outcome === 'accepted') {
                    console.log('User accepted the install prompt');
                } else {
                    console.log('User dismissed the install prompt');
                }
                deferredPrompt = null;
            });
        });
    }
});

// App update notification
if ('serviceWorker' in navigator) {
    navigator.serviceWorker.addEventListener('controllerchange', function() {
        // Show update notification
        const notification = document.querySelector('#update-notification');
        if (notification) {
            notification.style.display = 'block';
            
            const refreshButton = notification.querySelector('#refresh-app');
            if (refreshButton) {
                refreshButton.addEventListener('click', function() {
                    window.location.reload();
                });
            }
        }
    });
}

// Offline detection
function updateOnlineStatus() {
    const onlineStatus = document.querySelector('#online-status');
    if (onlineStatus) {
        if (navigator.onLine) {
            onlineStatus.textContent = 'Online';
            onlineStatus.className = 'online';
        } else {
            onlineStatus.textContent = 'Offline';
            onlineStatus.className = 'offline';
        }
    }
}

window.addEventListener('online', updateOnlineStatus);
window.addEventListener('offline', updateOnlineStatus);

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
    updateOnlineStatus();
});

// Basic caching strategy for offline support
if ('caches' in window) {
    // Cache important resources
    const CACHE_NAME = 'chirpy-theme-v1';
    const urlsToCache = [
        '/',
        '/assets/css/jekyll-theme-chirpy.css',
        '/assets/js/dist/theme.min.js',
        '/assets/js/dist/home.min.js'
    ];
    
    // This would typically be in a service worker, but for simplicity:
    window.addEventListener('load', function() {
        if (navigator.serviceWorker && navigator.serviceWorker.controller) {
            // Service worker is active, let it handle caching
            return;
        }
        
        // Fallback caching
        caches.open(CACHE_NAME).then(function(cache) {
            return cache.addAll(urlsToCache);
        }).catch(function(error) {
            console.log('Cache failed:', error);
        });
    });
}

// Export for global access
window.ChirpyApp = {
    updateOnlineStatus: updateOnlineStatus
};